apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: hello-pipeline
spec:
  params:
    - default: hello-service
      name: SOURCE_GIT_CONTEXT_DIR
      type: string
    - default: hello-service
      description: The application name
      name: APP_NAME
      type: string
    - default: hello-dev
      description: Namespace where the buildconfig will be or is located
      name: NAMESPACE
      type: string
    - default: hello-dev
      description: Namespace where the buildconfig will be or is located
      name: NAMESPACE_DEV
      type: string
    - default: >-
        http://http://nexus-registry-sonatype-nexus-service-nexus.apps.cluster-vcj6d.vcj6d.example.opentlc.com/repository/maven-central/
      description: Maven mirror for Maven Builds
      name: MAVEN_MIRROR_URL
      type: string
    - default: nexus-registry-sonatype-nexus-service-nexus.apps.cluster-vcj6d.vcj6d.example.opentlc.com
      description: External Registry (Nexus) for the Images
      name: EXTERNAL_REG_NEXUS_URL
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: 'https://github.com/luizfao/demo-pipeline-tkn'
        - name: revision
          value: main
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:da1aedf0b17f2b9dd2a46edc93ff1c0582989414b902a28cd79bad8a035c9ea4
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: output
    - name: generate-tag
      taskRef:
        kind: Task
        name: generate-tag
    - name: jkube-build
      params:
        - name: MAVEN_IMAGE
          value: 'registry.access.redhat.com/ubi8/openjdk-11:1.3'
        - name: CONTEXT_DIR
          value: ./$(params.SOURCE_GIT_CONTEXT_DIR)
        - name: GOALS
          value:
            - package
            - 'oc:build'
            - '-Djkube.namespace=$(params.NAMESPACE)'
            - '-Djkube.generator.name=$(params.APP_NAME)'
        - name: MAVEN_MIRROR_URL
          value: $(params.MAVEN_MIRROR_URL)
        - name: SERVER_USER
          value: admin
        - name: SERVER_PASSWORD
          value: admin123
      runAfter:
        - git-clone
        - generate-tag
      taskRef:
        kind: ClusterTask
        name: maven
      workspaces:
        - name: source
          workspace: app-source
        - name: maven-settings
          workspace: maven-settings
    - name: oc-tag-image-for-dev
      params:
        - name: SCRIPT
          value: >-
            oc tag $(params.NAMESPACE)/$(params.APP_NAME):latest
            $(params.NAMESPACE)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
      runAfter:
        - jkube-build
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: sonarqube-scanner
      params:
        - name: SONAR_HOST_URL
          value: >-
            https://sonarqube-sonarqube.apps.cluster-vcj6d.vcj6d.example.opentlc.com/
        - name: SONAR_PROJECT_KEY
          value: Java
        - name: SONAR_AUTH_TOKEN
          value: d5aa671cde269fd430a2e7e3c49bfce7292f0ddf
      runAfter:
        - set-image-in-dev
      taskRef:
        kind: Task
        name: sonarqube-scanner
      workspaces:
        - name: source
          workspace: output
    - name: set-image-in-dev
      params:
        - name: SCRIPT
          value: >-
            oc set image dc/$(params.APP_NAME)
            $(params.APP_NAME)=image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
            -n $(params.NAMESPACE_DEV)
      runAfter:
        - oc-tag-image-for-dev
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-img-to-external-registry
      params:
        - name: srcImageURL
          value: >-
            docker://image-registry.openshift-image-registry.svc:5000/$(params.NAMESPACE_DEV)/$(params.APP_NAME):dev-$(tasks.generate-tag.results.image-tag)
        - name: destImageURL
          value: >-
            docker://$(params.EXTERNAL_REG_NEXUS_URL)/repository/docker/$(params.NAMESPACE_DEV)/$(params.APP_NAME):prod-$(tasks.generate-tag.results.image-tag)
        - name: srcTLSverify
          value: 'false'
        - name: destTLSverify
          value: 'false'
      runAfter:
        - sonarqube-scanner
      taskRef:
        kind: ClusterTask
        name: skopeo-copy
      workspaces:
        - name: images-url
          workspace: output
    - name: update-kustomize-repo
      params:
        - name: gitRepositoryUrl
          value: 'https://github.com/luizfao/spring-service-kustomize'
        - name: gitRepositoryRevision
          value: prod
        - name: gitPath
          value: spring-service/overlays/production
        - name: fileName
          value: deployment-patches.yaml
        - name: image
          value: hello-service
        - name: imageTag
          value: prod-$(tasks.generate-tag.results.image-tag)
        - name: verbose
          value: 'true'
      runAfter:
        - push-img-to-external-registry
      taskRef:
        kind: Task
        name: update-kustomize-repo
  workspaces:
    - name: output
    - name: maven-settings
    - name: app-source
